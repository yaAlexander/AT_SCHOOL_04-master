package somethingabstract;

/**
 * Это Абстрактный класс.
 * Он создан для того, чтобы от него наследовались.
 * Существует ошибочное определение, что чтобы класс считался абстрактнымЮ у него должен быть хотя бы один асбтрактный метод.
 * Проверьте сами - достаточно просто объявить его абстрактным. Другое дело, что есть в классе есть хотя бы один абстрактный метод,
 * он просто обязан быть объявлен как абстрактный!
 * У Абстрактного класса может быть всё, что есть у обычного класса. Кроме экземпляра. Объекта от него создать нельзя. Не пытайтесь!
 * @author надеется остаться неизвестным.
 * @version крайняя
 * @since в последний момент.
 */
public abstract class Abstract {
    /**
     * Думали, только 1Сники могут писать на русском?
     * Шах и мат, атетисты!
     */
    private String даТакТожеМожно;

    public Abstract() {

    }

    /**
     * Приватное поле. Ничего интересного, кроме того, что в наследниках оно тоже будет доступно.
     * Во всех.
     * @return
     */
    public String getДаТакТожеМожно() {
        return даТакТожеМожно;
    }

    /**
     * Эээ... Это вообще законно?
     * @param даТакТожеМожно
     */
    public Abstract(String даТакТожеМожно) {
        System.out.println("В смысле конструктор у абстрактного класса?");
        this.даТакТожеМожно = даТакТожеМожно;
    }

    /**
     * Говорят, метод toString надо переопределять...
     * Ну давайте обяжем всех наследников сделать это!
     * @return Ну правда же, никому не интересно, что он вернет.
     */
    abstract public String toString ();

}
